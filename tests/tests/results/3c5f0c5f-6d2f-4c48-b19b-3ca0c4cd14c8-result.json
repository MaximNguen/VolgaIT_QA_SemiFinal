{"name": "test_get_moo", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[@class='custom_btn btn_hover' and @onclick='cowSound()']\"}\n  (Session info: chrome=141.0.7390.122); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff6866ae8e5+80021]\n\tGetHandleVerifier [0x0x7ff6866ae940+80112]\n\t(No symbol) [0x0x7ff68643060f]\n\t(No symbol) [0x0x7ff686488854]\n\t(No symbol) [0x0x7ff686488b1c]\n\t(No symbol) [0x0x7ff6864dc927]\n\t(No symbol) [0x0x7ff6864b126f]\n\t(No symbol) [0x0x7ff6864d968a]\n\t(No symbol) [0x0x7ff6864b1003]\n\t(No symbol) [0x0x7ff6864795d1]\n\t(No symbol) [0x0x7ff68647a3f3]\n\tGetHandleVerifier [0x0x7ff68696dc7d+2960429]\n\tGetHandleVerifier [0x0x7ff686967f3a+2936554]\n\tGetHandleVerifier [0x0x7ff686988977+3070247]\n\tGetHandleVerifier [0x0x7ff6866c83ce+185214]\n\tGetHandleVerifier [0x0x7ff6866cfe1f+216527]\n\tGetHandleVerifier [0x0x7ff6866b7b24+117460]\n\tGetHandleVerifier [0x0x7ff6866b7cdf+117903]\n\tGetHandleVerifier [0x0x7ff68669dbb8+11112]\n\tBaseThreadInitThunk [0x0x7fff27cc7374+20]\n\tRtlUserThreadStart [0x0x7fff28adcc91+33]", "trace": "self = <test_events.TestEvents object at 0x000001756C1A3360>\n\n    @allure.feature(\"Events\")\n    @allure.story(\"Нажатие кнопки Cow с выводом текста Moo!\")\n    def test_get_moo(self):\n>       self.event_page.buttonCow_click()\n\ntest_events.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\click_events_page.py:51: in buttonCow_click\n    return self.buttonCow().click()\n           ^^^^^^^^^^^^^^^^\npages\\click_events_page.py:44: in buttonCow\n    btn = self.find(BUTTONCOW[0], BUTTONCOW[1])\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npages\\base_page.py:9: in find\n    return self.browser.find_element(*args)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\myenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:926: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\myenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001756C301940>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...ff68669dbb8+11112]\\\\n\\\\tBaseThreadInitThunk [0x0x7fff27cc7374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7fff28adcc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[@class='custom_btn btn_hover' and @onclick='cowSound()']\"}\nE         (Session info: chrome=141.0.7390.122); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6866ae8e5+80021]\nE       \tGetHandleVerifier [0x0x7ff6866ae940+80112]\nE       \t(No symbol) [0x0x7ff68643060f]\nE       \t(No symbol) [0x0x7ff686488854]\nE       \t(No symbol) [0x0x7ff686488b1c]\nE       \t(No symbol) [0x0x7ff6864dc927]\nE       \t(No symbol) [0x0x7ff6864b126f]\nE       \t(No symbol) [0x0x7ff6864d968a]\nE       \t(No symbol) [0x0x7ff6864b1003]\nE       \t(No symbol) [0x0x7ff6864795d1]\nE       \t(No symbol) [0x0x7ff68647a3f3]\nE       \tGetHandleVerifier [0x0x7ff68696dc7d+2960429]\nE       \tGetHandleVerifier [0x0x7ff686967f3a+2936554]\nE       \tGetHandleVerifier [0x0x7ff686988977+3070247]\nE       \tGetHandleVerifier [0x0x7ff6866c83ce+185214]\nE       \tGetHandleVerifier [0x0x7ff6866cfe1f+216527]\nE       \tGetHandleVerifier [0x0x7ff6866b7b24+117460]\nE       \tGetHandleVerifier [0x0x7ff6866b7cdf+117903]\nE       \tGetHandleVerifier [0x0x7ff68669dbb8+11112]\nE       \tBaseThreadInitThunk [0x0x7fff27cc7374+20]\nE       \tRtlUserThreadStart [0x0x7fff28adcc91+33]\n\n..\\myenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "steps": [{"name": "Нажатие кнопки Cow", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[@class='custom_btn btn_hover' and @onclick='cowSound()']\"}\n  (Session info: chrome=141.0.7390.122); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff6866ae8e5+80021]\n\tGetHandleVerifier [0x0x7ff6866ae940+80112]\n\t(No symbol) [0x0x7ff68643060f]\n\t(No symbol) [0x0x7ff686488854]\n\t(No symbol) [0x0x7ff686488b1c]\n\t(No symbol) [0x0x7ff6864dc927]\n\t(No symbol) [0x0x7ff6864b126f]\n\t(No symbol) [0x0x7ff6864d968a]\n\t(No symbol) [0x0x7ff6864b1003]\n\t(No symbol) [0x0x7ff6864795d1]\n\t(No symbol) [0x0x7ff68647a3f3]\n\tGetHandleVerifier [0x0x7ff68696dc7d+2960429]\n\tGetHandleVerifier [0x0x7ff686967f3a+2936554]\n\tGetHandleVerifier [0x0x7ff686988977+3070247]\n\tGetHandleVerifier [0x0x7ff6866c83ce+185214]\n\tGetHandleVerifier [0x0x7ff6866cfe1f+216527]\n\tGetHandleVerifier [0x0x7ff6866b7b24+117460]\n\tGetHandleVerifier [0x0x7ff6866b7cdf+117903]\n\tGetHandleVerifier [0x0x7ff68669dbb8+11112]\n\tBaseThreadInitThunk [0x0x7fff27cc7374+20]\n\tRtlUserThreadStart [0x0x7fff28adcc91+33]\n\n", "trace": "  File \"C:\\Users\\Maksim\\Desktop\\LearningProgramming\\VolgaIT_QA_SemiFinal\\tests\\pages\\click_events_page.py\", line 51, in buttonCow_click\n    return self.buttonCow().click()\n           ~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\Maksim\\Desktop\\LearningProgramming\\VolgaIT_QA_SemiFinal\\tests\\pages\\click_events_page.py\", line 44, in buttonCow\n    btn = self.find(BUTTONCOW[0], BUTTONCOW[1])\n  File \"C:\\Users\\Maksim\\Desktop\\LearningProgramming\\VolgaIT_QA_SemiFinal\\tests\\pages\\base_page.py\", line 9, in find\n    return self.browser.find_element(*args)\n           ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^\n  File \"C:\\Users\\Maksim\\Desktop\\LearningProgramming\\VolgaIT_QA_SemiFinal\\myenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 926, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Maksim\\Desktop\\LearningProgramming\\VolgaIT_QA_SemiFinal\\myenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 458, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\Maksim\\Desktop\\LearningProgramming\\VolgaIT_QA_SemiFinal\\myenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1761745474045, "stop": 1761745484073}], "attachments": [{"name": "stdout", "source": "e04c7e5f-d74d-4cb6-af38-e5479badd550-attachment.txt", "type": "text/plain"}], "start": 1761745474044, "stop": 1761745484115, "uuid": "6aaab687-24bc-45b0-9385-411db631efd0", "historyId": "a78c1fd9a4c4dcdab00d28d44567b4a2", "testCaseId": "a78c1fd9a4c4dcdab00d28d44567b4a2", "fullName": "test_events.TestEvents#test_get_moo", "labels": [{"name": "feature", "value": "Events"}, {"name": "story", "value": "Нажатие кнопки Cow с выводом текста Moo!"}, {"name": "suite", "value": "test_events"}, {"name": "subSuite", "value": "TestEvents"}, {"name": "host", "value": "DESKTOP-T28TT8C"}, {"name": "thread", "value": "20956-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_events"}], "titlePath": ["test_events.py", "TestEvents"]}